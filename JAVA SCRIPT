// Product data
const products = [
    { id: 1, name: "iPhone 13 Pro", price: 999.99, image: "https://images.unsplash.com/photo-1632661674596-df8be070a5c5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 2, name: "MacBook Air M1", price: 999.99, image: "https://images.unsplash.com/photo-1611186871348-b1ce696e52c9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 3, name: "AirPods Pro", price: 249.99, image: "https://images.unsplash.com/photo-1592921870789-04563d55041c?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 4, name: "Apple Watch Series 7", price: 399.99, image: "https://images.unsplash.com/photo-1551816230-ef5deaed4a26?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 5, name: "iPad Air", price: 599.99, image: "https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 6, name: "Sony WH-1000XM4", price: 349.99, image: "https://images.unsplash.com/photo-1590658268037-6bf12165a8df?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 7, name: "Nintendo Switch", price: 299.99, image: "https://images.unsplash.com/photo-1578303512597-81e6cc155b3e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
    { id: 8, name: "Amazon Echo Dot", price: 49.99, image: "https://images.unsplash.com/photo-1543512214-318c7553f230?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80" },
];

// Shopping cart
let cart = {};

// DOM Elements
const productList = document.getElementById("product-list");
const cartItems = document.getElementById("cart-items");
const cartIcon = document.getElementById("cart-icon");
const cartCount = document.getElementById("cart-count");
const cartSubtotal = document.getElementById("cart-subtotal");
const cartTax = document.getElementById("cart-tax");
const cartTotal = document.getElementById("cart-total");
const checkoutBtn = document.getElementById("checkout-btn");
const orderConfirmation = document.getElementById("order-confirmation");
const confirmTotal = document.getElementById("confirm-total");
const deliveryDate = document.getElementById("delivery-date");
const closeConfirmation = document.getElementById("close-confirmation");

// Display products on the page
function displayProducts() {
    productList.innerHTML = products.map(product => `
        <div class="product">
            <img src="${product.image}" alt="${product.name}">
            <div class="product-info">
                <h3>${product.name}</h3>
                <p>Price: $${product.price.toFixed(2)}</p>
                <button onclick="addToCart(${product.id})">Add to Cart</button>
            </div>
        </div>
    `).join('');
}

// Add a product to the cart
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (cart[productId]) {
        cart[productId].quantity++;
    } else {
        cart[productId] = { ...product, quantity: 1 };
    }
    updateCart();
    updateCartIcon();
}

// Update the cart display
function updateCart() {
    cartItems.innerHTML = Object.values(cart).map(item => `
        <div class="cart-item">
            <img src="${item.image}" alt="${item.name}">
            <div>
                <h3>${item.name}</h3>
                <p>Price: $${item.price.toFixed(2)}</p>
                <p>
                    Quantity: 
                    <button onclick="updateQuantity(${item.id}, ${item.quantity - 1})">-</button>
                    ${item.quantity}
                    <button onclick="updateQuantity(${item.id}, ${item.quantity + 1})">+</button>
                </p>
            </div>
            <button onclick="removeFromCart(${item.id})">Remove</button>
        </div>
    `).join('');
    updateCartSummary();
}

// Update product quantity in cart
function updateQuantity(productId, newQuantity) {
    if (newQuantity > 0) {
        cart[productId].quantity = newQuantity;
    } else {
        removeFromCart(productId);
    }
    updateCart();
    updateCartIcon();
}

// Remove a product from the cart
function removeFromCart(productId) {
    delete cart[productId];
    updateCart();
    updateCartIcon();
}

// Update cart summary (subtotal, tax, total)
function updateCartSummary() {
    const subtotal = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
    const tax = subtotal * 0.1;
    const total = subtotal + tax;

    cartSubtotal.textContent = subtotal.toFixed(2);
    cartTax.textContent = tax.toFixed(2);
    cartTotal.textContent = total.toFixed(2);
}

// Update cart icon
function updateCartIcon() {
    const totalItems = Object.values(cart).reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = totalItems;
}

// Toggle cart visibility
function toggleCart() {
    const cartSection = document.getElementById("cart");
    cartSection.classList.toggle("hidden");
}

// Checkout process
function checkout() {
    const total = Object.values(cart).reduce((sum, item) => sum + item.price * item.quantity, 0);
    confirmTotal.textContent = total.toFixed(2);

    const estimatedDelivery = new Date();
    estimatedDelivery.setDate(estimatedDelivery.getDate() + 3);
    deliveryDate.textContent = estimatedDelivery.toLocaleDateString();

    orderConfirmation.style.display = "block";
}

// Close order confirmation and reset cart
function closeOrderConfirmation() {
    orderConfirmation.style.display = "none";
    cart = {};
    updateCart();
    updateCartIcon();
}

// Event Listeners
cartIcon.addEventListener("click", toggleCart);
checkoutBtn.addEventListener("click", checkout);
closeConfirmation.addEventListener("click", closeOrderConfirmation);

// Initialize the page
displayProducts();
updateCartIcon();
